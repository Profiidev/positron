//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "o_auth_scope_o_auth_policy")]
pub struct Model {
  #[sea_orm(primary_key, auto_increment = false)]
  pub scope: Uuid,
  #[sea_orm(primary_key, auto_increment = false)]
  pub policy: Uuid,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
  #[sea_orm(
    belongs_to = "super::o_auth_policy::Entity",
    from = "Column::Policy",
    to = "super::o_auth_policy::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  OAuthPolicy,
  #[sea_orm(
    belongs_to = "super::o_auth_scope::Entity",
    from = "Column::Scope",
    to = "super::o_auth_scope::Column::Id",
    on_update = "Cascade",
    on_delete = "Cascade"
  )]
  OAuthScope,
}

impl Related<super::o_auth_policy::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::OAuthPolicy.def()
  }
}

impl Related<super::o_auth_scope::Entity> for Entity {
  fn to() -> RelationDef {
    Relation::OAuthScope.def()
  }
}

impl ActiveModelBehavior for ActiveModel {}
